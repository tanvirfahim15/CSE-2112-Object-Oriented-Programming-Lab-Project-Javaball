/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package server;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author TANVIR
 */
public class serverhome extends javax.swing.JPanel {

    ServerSocket ss = null;
    Socket s = null;
    DataInputStream din = null;
    DataOutputStream dout = null;

    /**
     * Creates new form serverhome
     */
    public serverhome() {
        initComponents();
        new connect().start();
    }
    String last = "";

    class connect extends Thread {

        public void run() {
            while(true){
                try {
                ss = new ServerSocket(5000);
            } catch (IOException ex) {
            }
            try {
                s = ss.accept();
            } catch (IOException ex) {
            }
            System.out.println("Client Connected.....");
            try {
                din = new DataInputStream(s.getInputStream());
            } catch (IOException ex) {
            }
            try {
                dout = new DataOutputStream(s.getOutputStream());
            } catch (IOException ex) {
            }
            new rcv().start();
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(serverhome.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    class send extends Thread {

        String s1;

        send(String str) {
            s1 = str;
        }

        public void run() {
            try {
                dout.writeUTF(s1);
            } catch (IOException ex) {
            }

        }

    }

    class rcv extends Thread {

        String s1;

        public void run() {
            while (true) {
                String str = null;
                try {
                    str = din.readUTF();
                } catch (IOException ex) {
                }

                if (str.length() > 0) {
                    String s3 = jTextArea1.getText() + "\nClient:" + str;
                    jTextArea1.setText(s3);
                    new send("User:" + str).start();
                    if (str.equals("yes")) {
                    } else if (str.equals("no")) {
                        jTextArea1.append("\nYOU NEED TO ANSWER");
                        new MusicThread().start();
                    } else if (MAIN.datamap.containsKey(str)) {
                        last = str;
                        jTextArea1.append("\nSERVER:" + MAIN.datamap.get(str));
                        new send("HELPLINE:" + MAIN.datamap.get(str)).start();
                        new send("HELPLINE:" + "Got your solution?").start();
                    } else if (MAIN.getans(str) != null) {
                        last = str;
                        jTextArea1.append("\nSERVER:" + MAIN.getans(str));
                        new send("HELPLINE:" + MAIN.getans(str)).start();
                       // new send("HELPLINE:" + "Got your solution?").start();

                    } else {
                        //alarm                   
                        last = str;
                        jTextArea1.append("\nYOU NEED TO ANSWER");
                        new MusicThread().start();

                    }
                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setFocusable(false);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("ANSWER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(43, 43, 43))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.jTextField1.getText().length() > 0) {
            this.jTextArea1.append("\nSERVER:" + this.jTextField1.getText());
        }
        if (this.jTextField1.getText().length() > 0) {
            new send("HELPLINE:" + this.jTextField1.getText()).start();
            
            MAIN.datamap.put(last, this.jTextField1.getText());
        }
        this.jTextField1.setText("");
        
        try {
            MAIN.updatedata();
        } catch (IOException ex) {
            Logger.getLogger(serverhome.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
