/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package network;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.security.SecureRandom;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author Tanvir
 */
public class serverpanel extends javax.swing.JPanel {

    /**
     * Creates new form servermain
     */
    public serverpanel() {
        initComponents();
        this.jTextArea1.setText("****Codes****\n");
        FileReader fin = null;
        FileWriter fout = null;
        try {
            fin = new FileReader("code.txt");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        Scanner sc = new Scanner(fin);
        while (sc.hasNext()) {
            StringTokenizer st = new StringTokenizer(sc.nextLine());
            this.jTextArea1.append(st.nextToken() + "\n");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jButton7 = new javax.swing.JButton();

        jButton1.setText("START SERVER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("STOP SERVER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("GENERATE CODE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setFocusable(false);
        jScrollPane1.setViewportView(jTextArea1);

        jButton4.setText("UPDATE CODES");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("HEATMAP of BEST PLAYER");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("HEATMAP of");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel1.setText("");

        jButton7.setText("UPDATE SERVER");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(169, 169, 169)
                                                .addComponent(jLabel1))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addGap(230, 230, 230)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                                .addGap(211, 211, 211)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(209, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jLabel1)
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                                        .addComponent(jTextField1))))
                                .addGap(18, 18, 18)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(258, Short.MAX_VALUE))
        );
        ImageIcon ic = new javax.swing.ImageIcon(getClass().getResource("back.jpg"));
        ic.getImage().flush();
        jLabel2.setIcon(ic); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(0, 0, 1100, 900);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        stgl stGl = new stgl();
        try {
            Thread t = new GameServer();
            Thread t1 = new Signupserver();
            Thread t2 = new startserver();
            Thread t3 = new codedelserver();

            t.start();
            t1.start();
            t2.start();
            t3.start();
            Thread p[] = new Thread[50];
            Thread q[] = new Thread[50];

            int i;
            for (i = 0; i < 50; i++) {
                p[i] = new playserver(3050 + i);
                p[i].start();
                q[i] = new playdata(3150 + i);
                q[i].start();

            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        System.out.print("sever started\n");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed
    static final String AB = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    static SecureRandom rnd = new SecureRandom();

    String randomString(int len) {
        StringBuilder sb = new StringBuilder(len);
        for (int i = 0; i < len; i++) {
            sb.append(AB.charAt(rnd.nextInt(AB.length())));
        }
        return sb.toString();
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        FileReader fin = null;
        FileWriter fout = null;
        try {
            fin = new FileReader("code.txt");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            fout = new FileWriter("codetmp.txt");
        } catch (IOException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        Scanner sc = new Scanner(fin);
        while (sc.hasNext()) {
            try {
                fout.append(sc.nextLine());
                fout.append(System.getProperty("line.separator"));
            } catch (IOException ex) {
                Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        int x = 20;
        while (x > 0) {
            try {
                fout.append(randomString(5) + " " + 10);
                fout.append(System.getProperty("line.separator"));
            } catch (IOException ex) {
                Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            x--;
        }
        try {
            fout.close();
        } catch (IOException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            fin = new FileReader("codetmp.txt");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            fout = new FileWriter("code.txt");
        } catch (IOException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        sc = new Scanner(fin);
        while (sc.hasNext()) {
            try {
                fout.append(sc.nextLine());
                fout.append(System.getProperty("line.separator"));
            } catch (IOException ex) {
                Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            fout.close();
        } catch (IOException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        this.jTextArea1.setText("****Codes****\n");
        FileReader fin = null;
        FileWriter fout = null;
        try {
            fin = new FileReader("code.txt");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        Scanner sc = new Scanner(fin);
        while (sc.hasNext()) {
            StringTokenizer st = new StringTokenizer(sc.nextLine());
            this.jTextArea1.append(st.nextToken() + "\n");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Main.frame.setVisible(false);
        try {
            heatframe.main(-1);
        } catch (IOException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        try {int x=Integer.parseInt(this.jTextField1.getText());
        if(x>0&&x<50){Main.frame.setVisible(false);
            heatframe.main(x);
        }
       else jTextField1.setText("Not valid");
            
        } 
        catch(NumberFormatException e){jTextField1.setText("Not valid");
        }catch (IOException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        FileReader fin = null;
        try {
            fin = new FileReader("user.txt");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        Scanner sc = new Scanner(fin);
        FileWriter fout = null;
        try {
            fout = new FileWriter("usertmpp.txt");
        } catch (IOException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        while (sc.hasNext()) {
            user us = null;
            try {
                us = user.toobject(sc.nextLine());
            } catch (FileNotFoundException ex) {
                Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (us.days > 0) {
                us.days--;
            }
            try {
                fout.append(us.toString());
            } catch (IOException ex) {
                Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                fout.append(System.getProperty("line.separator"));
            } catch (IOException ex) {
                Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            fout.close();
        } catch (IOException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            fin = new FileReader("usertmpp.txt");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        sc = new Scanner(fin);
        try {
            fout = new FileWriter("user.txt");
        } catch (IOException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        while (sc.hasNext()) {
            user us = null;
            try {
                us = user.toobject(sc.nextLine());
            } catch (FileNotFoundException ex) {
                Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                fout.append(us.toString());
            } catch (IOException ex) {
                Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                fout.append(System.getProperty("line.separator"));
            } catch (IOException ex) {
                Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            fout.close();
        } catch (IOException ex) {
            Logger.getLogger(serverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;

    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
